{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Math","random","toString","slice","Clock","state","date","Date","clockName","timerIdTime","timerIdName","this","window","setInterval","setState","console","log","_","prevState","clearInterval","className","toLocaleTimeString","Component","App","hasClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAYX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,UAAWV,KAHf,EAMEW,YAAc,EANhB,EAQEC,YAAc,EARhB,uDAUE,WAAqB,IAAD,OAClBC,KAAKF,YAAcG,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAER,KAAM,IAAIC,OAE1BQ,QAAQC,IAAI,EAAKX,MAAMC,QACtB,KAEHK,KAAKD,YAAcE,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEN,UAAWV,QAC1B,QAnBP,gCAsBE,SAAmBmB,EAAOC,GACpBA,EAAUV,YAAcG,KAAKN,MAAMG,WAErCO,QAAQC,IAAR,qBAA0BE,EAAUV,UAApC,yBAA8DG,KAAKN,MAAMG,cAzB/E,kCA6BE,WACEI,OAAOO,cAAcR,KAAKF,aAC1BG,OAAOO,cAAcR,KAAKD,eA/B9B,oBAkCE,WACE,MAA4BC,KAAKN,MAAzBC,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAEd,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,IAGF,YAED,sBAAMY,UAAU,cAAhB,SACGd,EAAKe,8BA9ChB,GAA2BC,aCTdC,EAAb,4MACElB,MAAyB,CACvBmB,UAAU,GAFd,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,kBAAM,EAAKZ,SAAS,CAAEU,UAAU,OACnEC,SAASC,iBAAiB,eAAe,kBACvC,EAAKZ,SAAS,CAAEU,UAAU,SARhC,oBAWE,WACE,IAAQA,EAAab,KAAKN,MAAlBmB,SAER,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCI,GAAa,cAAC,EAAD,WAjBtB,GAAyBF,aCLzBK,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.a46b7111.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  date: Date,\n};\n\n// type Props = {\n//   clockName: string;\n// };\n\nexport class Clock extends Component<{}, State> {\n  state = {\n    date: new Date(),\n    clockName: getRandomName(),\n  };\n\n  timerIdTime = 0;\n\n  timerIdName = 0;\n\n  componentDidMount() {\n    this.timerIdTime = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n\n    this.timerIdName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_: {}, prevState: State) {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Old name - ${prevState.clockName} and New name ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerIdTime);\n    window.clearInterval(this.timerIdName);\n  }\n\n  render() {\n    const { date, clockName } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', () => this.setState({ hasClock: true }));\n    document.addEventListener('contextmenu', () => (\n      this.setState({ hasClock: false })));\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (<Clock />)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}